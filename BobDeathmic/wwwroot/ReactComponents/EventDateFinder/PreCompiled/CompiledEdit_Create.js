"use strict"; function _instanceof(e, t) { return null != t && "undefined" != typeof Symbol && t[Symbol.hasInstance] ? t[Symbol.hasInstance](e) : e instanceof t } function _typeof(e) { return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e })(e) } function _classCallCheck(e, t) { if (!_instanceof(e, t)) throw new TypeError("Cannot call a class as a function") } function _defineProperties(e, t) { for (var a = 0; a < t.length; a++) { var n = t[a]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } function _createClass(e, t, a) { return t && _defineProperties(e.prototype, t), a && _defineProperties(e, a), e } function _possibleConstructorReturn(e, t) { return !t || "object" !== _typeof(t) && "function" != typeof t ? _assertThisInitialized(e) : t } function _getPrototypeOf(e) { return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) { return e.__proto__ || Object.getPrototypeOf(e) })(e) } function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e } function _inherits(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function"); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && _setPrototypeOf(e, t) } function _setPrototypeOf(e, t) { return (_setPrototypeOf = Object.setPrototypeOf || function (e, t) { return e.__proto__ = t, e })(e, t) } var ChatUserSelect = function (e) { function t(e) { var a; return _classCallCheck(this, t), (a = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { chatUsers: [], selectedUser: "" }, a.handleOnClick = a.handleOnClick.bind(_assertThisInitialized(a)), a.handleOnChange = a.handleOnChange.bind(_assertThisInitialized(a)), a } return _inherits(t, React.Component), _createClass(t, [{ key: "componentWillMount", value: function () { var e = this; $.ajax({ url: "/Events/InvitableUsers/" + this.props.ID, type: "GET", data: {}, success: function (t) { e.setState({ chatUsers: t, selectedUser: t[0].name }) } }) } }, { key: "handleOnClick", value: function (e) { var t = this; $.ajax({ url: "/Events/AddInvitedUser/", type: "POST", data: { ID: t.props.ID, ChatUser: t.state.selectedUser }, success: function (e) { t.props.eventEmitter.emitEvent("UpdateChatMembers") } }) } }, { key: "handleOnChange", value: function (e) { console.log(e.target.value), this.setState({ selectedUser: e.target.value }) } }, { key: "render", value: function () { if (this.state.chatUsers.length > 0) { var e = this.state.chatUsers.map(function (e) { return React.createElement("option", { key: e.name, value: e.name }, e.name) }); return React.createElement("div", null, React.createElement("select", { key: this.props.key, value: this.state.selectedUser, onChange: this.handleOnChange, className: "chatUser_" + this.props.key }, e), React.createElement("span", { className: "button", onClick: this.handleOnClick }, "Invite")) } return React.createElement("p", null, " No Users Loaded") } }]), t }(), EditEvent = function (e) { function t(e) { var a; return _classCallCheck(this, t), (a = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { data: [], eventEmitter: new EventEmitter }, a } return _inherits(t, React.Component), _createClass(t, [{ key: "componentWillMount", value: function () { var e = this; $.ajax({ url: "/Events/GetEvent/" + this.props.ID, type: "GET", data: {}, success: function (t) { e.setState({ data: t }) } }) } }, { key: "render", value: function () { return void 0 === this.state.data.name ? React.createElement("div", { className: "OverView" }, React.createElement(NameField, { owner: this.props.ID, value: "" })) : React.createElement("div", { className: "OverView" }, React.createElement("span", null, "Name"), React.createElement(NameField, { owner: this.props.ID, value: this.state.data.name }), React.createElement(ChatUserSelect, { ID: this.props.ID, eventEmitter: this.state.eventEmitter }), React.createElement(InvitedUserList, { ID: this.props.ID, eventEmitter: this.state.eventEmitter }), React.createElement(TemplateList, { ID: this.props.ID, eventEmitter: this.state.eventEmitter })) } }]), t }(), InvitedUserList = function (e) { function t(e) { var a; return _classCallCheck(this, t), (a = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { InvitedUsers: [] }, a.handleUpdateChatMembers = a.handleUpdateChatMembers.bind(_assertThisInitialized(a)), a.handleOnRemoveClick = a.handleOnRemoveClick.bind(_assertThisInitialized(a)), a } return _inherits(t, React.Component), _createClass(t, [{ key: "componentWillMount", value: function () { var e = this; $.ajax({ url: "/Events/InvitedUsers/" + this.props.ID, type: "GET", data: {}, success: function (t) { e.setState({ InvitedUsers: t }) } }), this.props.eventEmitter.addListener("UpdateChatMembers", e.handleUpdateChatMembers) } }, { key: "handleUpdateChatMembers", value: function (e) { var t = this; $.ajax({ url: "/Events/InvitedUsers/" + t.props.ID, type: "GET", data: {}, success: function (e) { t.setState({ InvitedUsers: e }) } }) } }, { key: "handleOnRemoveClick", value: function (e) { var t = this; e.persist(), $.ajax({ url: "/Events/RemoveInvitedUser/", type: "POST", data: { ID: t.props.ID, ChatUser: e.target.dataset.value }, success: function (e) { t.props.eventEmitter.emitEvent("UpdateChatMembers") } }) } }, { key: "handleOnClick", value: function (e) { } }, { key: "handleOnChange", value: function (e) { } }, { key: "render", value: function () { if (t = "", this.state.InvitedUsers.length > 0) { var e = this, t = this.state.InvitedUsers.map(function (t) { return React.createElement("div", { key: t.key, className: "col-12 userListItem" }, React.createElement("span", null, t.name), React.createElement("span", { onClick: e.handleOnRemoveClick, "data-value": t.name, className: "button" }, "remove")) }); return React.createElement("div", null, React.createElement("div", { className: "row", key: this.props.key }, t)) } return React.createElement("p", null, " No Users Loaded") } }]), t }(), NameField = function (e) { function t(e) { var a; return _classCallCheck(this, t), (a = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { value: e.value, id: e.owner }, a.handleSubmit = a.handleSubmit.bind(_assertThisInitialized(a)), a.handleFocus = a.handleFocus.bind(_assertThisInitialized(a)), a.hangleOnChange = a.hangleOnChange.bind(_assertThisInitialized(a)), a } return _inherits(t, React.Component), _createClass(t, [{ key: "componentDidUpdate", value: function (e) { "" === e.value && "" !== this.props.value && this.setState({ value: this.props.value }), "undefined" === e.id && this.setState({ id: this.props.owner }) } }, { key: "handleSubmit", value: function (e) { } }, { key: "hangleOnChange", value: function (e) { var t = e.target.value; this.setState({ value: t }) } }, { key: "handleFocus", value: function (e) { if (void 0 !== this.state.id) { new FormData; $.ajax({ url: "/Events/UpdateEventTitle/", type: "POST", data: { Title: this.state.value, ID: this.state.id }, success: function (e) { } }) } } }, { key: "render", value: function () { return React.createElement("input", { onBlur: this.handleFocus, onChange: this.hangleOnChange, className: "NameField", type: "text", value: this.state.value }) } }]), t }(), Template = function (e) { function t(e) { var a; return _classCallCheck(this, t), (a = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { day: e.day, start: e.start, stop: e.stop, name: e.name }, a.handleOnDaySelect = a.handleOnDaySelect.bind(_assertThisInitialized(a)), a.handleOnEndChange = a.handleOnEndChange.bind(_assertThisInitialized(a)), a.handleOnStartChange = a.handleOnStartChange.bind(_assertThisInitialized(a)), a.handleDelete = a.handleDelete.bind(_assertThisInitialized(a)), a } return _inherits(t, React.Component), _createClass(t, [{ key: "handleOnDaySelect", value: function (e) { var t = this; e.persist(); var a = e; $.ajax({ url: "/Events/SetDayOfTemplate/" + this.state.name, type: "GET", data: { Day: e.target.value }, success: function (e) { if (!0 === e) { var n = parseInt(a.target.value); t.setState({ day: n }) } } }) } }, { key: "handleDelete", value: function (e) { var t = this; e.persist(), $.ajax({ url: "/Events/RemoveTemplate/", type: "GET", data: { ID: t.state.name, CalendarID: t.props.calendar }, success: function (e) { t.props.eventEmitter.emitEvent("UpdateTemplates") } }) } }, { key: "handleOnStartChange", value: function (e) { var t = this; e.persist(); var a = e.target.value; $.ajax({ url: "/Events/SetStartOfTemplate/" + this.state.name, type: "GET", data: { Start: e.target.value }, success: function (e) { !0 === e && t.setState({ start: a }) } }) } }, { key: "handleOnEndChange", value: function (e) { var t = this; e.persist(); var a = e.target.value; $.ajax({ url: "/Events/SetStopOfTemplate/" + this.state.name, type: "GET", data: { Stop: e.target.value }, success: function (e) { !0 === e && t.setState({ stop: a }) } }) } }, { key: "render", value: function () { var e = this, t = [{ Day: "Montag", Value: 1 }, { Day: "Dienstag", Value: 2 }, { Day: "Mittwoch", Value: 3 }, { Day: "Donnerstag", Value: 4 }, { Day: "Freitag", Value: 5 }, { Day: "Samstag", Value: 6 }, { Day: "Sonntag", Value: 7 }].map(function (t) { return React.createElement("div", { className: "day", key: t.Day + t.Value }, React.createElement("input", { type: "radio", onChange: e.handleOnDaySelect, checked: e.state.day === t.Value, name: e.state.name, value: t.Value }), " ", React.createElement("span", null, t.Day)) }); return React.createElement("div", { className: "template" }, React.createElement("div", { className: "days" }, t), React.createElement("div", { className: "times" }, React.createElement("div", { className: "time" }, React.createElement("span", null, "Start"), React.createElement("input", { type: "time", onChange: this.handleOnStartChange, name: "Start", value: this.state.start })), React.createElement("div", { className: "time" }, React.createElement("span", null, "Ende"), React.createElement("input", { type: "time", onChange: this.handleOnEndChange, name: "Stop", value: this.state.stop }))), React.createElement("span", { onClick: this.handleDelete, className: "delete" }, React.createElement("i", { className: "fas fa-trash-alt" }))) } }]), t }(), TemplateList = function (e) { function t(e) { var a; return _classCallCheck(this, t), (a = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { Templates: [] }, a.handleAddTemplateClick = a.handleAddTemplateClick.bind(_assertThisInitialized(a)), a.handleAddTemplateClick = a.handleAddTemplateClick.bind(_assertThisInitialized(a)), a.handleUpdateTemplates = a.handleUpdateTemplates.bind(_assertThisInitialized(a)), a } return _inherits(t, React.Component), _createClass(t, [{ key: "componentWillMount", value: function () { var e = this; $.ajax({ url: "/Events/Templates/" + this.props.ID, type: "GET", data: {}, success: function (t) { e.setState({ Templates: t }) } }), this.props.eventEmitter.addListener("UpdateTemplates", e.handleUpdateTemplates) } }, { key: "handleUpdateTemplates", value: function (e) { var t = this; $.ajax({ url: "/Events/Templates/" + this.props.ID, type: "GET", data: {}, success: function (e) { t.setState({ Templates: e }) } }) } }, { key: "handleAddTemplateClick", value: function (e) { var t = this; $.ajax({ url: "/Events/AddTemplate/" + this.props.ID, type: "GET", data: {}, success: function (e) { var a = t.state.Templates; a.push(e), t.setState({ Templates: a }) } }) } }, { key: "render", value: function () { if (this.state.Templates.length > 0) { var e = this, t = this.state.Templates.map(function (t) { return React.createElement(Template, { calendar: e.props.ID, eventEmitter: e.props.eventEmitter, key: t.key, name: t.key, day: t.Day, start: t.Start, stop: t.Stop }) }); return React.createElement("div", null, React.createElement("div", { className: "row", key: this.props.key }, React.createElement("div", { className: "col-12" }, React.createElement("span", { onClick: this.handleAddTemplateClick, className: "button" }, "Add Template")), React.createElement("div", { className: "col-12" }, t))) } return React.createElement("div", { className: "row" }, React.createElement("div", { className: "col-12" }, React.createElement("span", { onClick: this.handleAddTemplateClick, className: "button" }, "Add Template"))) } }]), t }();