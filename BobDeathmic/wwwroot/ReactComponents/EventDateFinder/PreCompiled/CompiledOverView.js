"use strict"; function _instanceof(e, t) { return null != t && "undefined" != typeof Symbol && t[Symbol.hasInstance] ? t[Symbol.hasInstance](e) : e instanceof t } function _typeof(e) { return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e })(e) } function _classCallCheck(e, t) { if (!_instanceof(e, t)) throw new TypeError("Cannot call a class as a function") } function _defineProperties(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } function _createClass(e, t, n) { return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e } function _possibleConstructorReturn(e, t) { return !t || "object" !== _typeof(t) && "function" != typeof t ? _assertThisInitialized(e) : t } function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e } function _getPrototypeOf(e) { return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) { return e.__proto__ || Object.getPrototypeOf(e) })(e) } function _inherits(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function"); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && _setPrototypeOf(e, t) } function _setPrototypeOf(e, t) { return (_setPrototypeOf = Object.setPrototypeOf || function (e, t) { return e.__proto__ = t, e })(e, t) } var OverViewCalendar = function (e) { function t(e) { var n; return _classCallCheck(this, t), n = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e)), console.log(e), n } return _inherits(t, React.Component), _createClass(t, [{ key: "render", value: function () { return "" !== this.props.editLink ? React.createElement("div", { className: "row" }, React.createElement("div", { className: "col-md-3 col-12 mb-4" }, this.props.name), React.createElement("div", { className: "col-md-3 col-6 mb-4" }, React.createElement("a", { className: "button", href: this.props.voteLink }, "Vote")), React.createElement("div", { className: "col-md-3 col-6 mb-4" }, React.createElement("a", { className: "button", href: this.props.editLink }, "Edit")), React.createElement("div", { className: "col-md-3 col-6 mb-4" }, React.createElement("a", { className: "button", href: this.props.deleteLink }, "Delete"))) : React.createElement("div", { className: "row" }, React.createElement("div", { className: "col-md-6 col-12 mb-4" }, this.props.name), React.createElement("div", { className: "col-md-3 col-6 mb-4" }, React.createElement("a", { className: "button", href: this.props.voteLink }, "Vote"))) } }]), t }(), OverView = function (e) { function t(e) { var n; return _classCallCheck(this, t), (n = _possibleConstructorReturn(this, _getPrototypeOf(t).call(this, e))).state = { data: [] }, n } return _inherits(t, React.Component), _createClass(t, [{ key: "componentWillMount", value: function () { var e = this, t = new XMLHttpRequest; t.open("get", this.props.url, !0), t.onload = function () { var n = JSON.parse(t.responseText); e.setState({ data: n }) }, t.send() } }, { key: "render", value: function () { if (e = "", console.log(this.state.data), void 0 !== this.state.data.calendars) var e = this.state.data.calendars.map(function (e) { return React.createElement(OverViewCalendar, { key: e.key, deleteLink: e.deleteLink, editLink: e.editLink, name: e.name, voteLink: e.voteLink, chatUsers: e.chatUsers }) }); return React.createElement("div", { className: "OverView" }, React.createElement("a", { className: "button", href: this.state.data.addCalendarLink }, "Add Calendar"), React.createElement("br", null), React.createElement("br", null), e) } }]), t }(); ReactDOM.render(React.createElement(OverView, { url: "/Events/OverViewData" }), document.getElementById("reactcontent"));